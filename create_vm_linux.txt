

# Create RG
resource "azurerm_resource_group" "vm_rg_linux" {
  location = var.resource_group_location
  name     = "${var.prefix_linuxvm}-rg"
}

# Create virtual network
resource "azurerm_virtual_network" "my_terraform_vnetwork" {
  name                = "${var.prefix_linuxvm}-vnet"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.vm_rg_linux.location
  resource_group_name = azurerm_resource_group.vm_rg_linux.name
}


# Create subnet
resource "azurerm_subnet" "my_terraform_subnet" {
  name                 = "${var.prefix_linuxvm}-subnet"
  resource_group_name  = azurerm_resource_group.vm_rg_linux.name
  virtual_network_name = azurerm_virtual_network.my_terraform_vnetwork.name
  address_prefixes     = ["10.0.1.0/24"]
}

# Create public IPs
resource "azurerm_public_ip" "my_terraform_public_ip" {
  name                = "${var.prefix_linuxvm}-public-ip"
  location            = azurerm_resource_group.vm_rg_linux.location
  resource_group_name = azurerm_resource_group.vm_rg_linux.name
  allocation_method   = "Dynamic"
}




# Create Network Security Group and rules
resource "azurerm_network_security_group" "my_terraform_nsg" {
  name                = "${var.prefix_linuxvm}-nsg"
  location            = azurerm_resource_group.vm_rg_linux.location
  resource_group_name = azurerm_resource_group.vm_rg_linux.name

  security_rule {
    name                       = "SSH"
    priority                   = 1001
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
  
}



# Create network interface
resource "azurerm_network_interface" "my_terraform_nic" {
  name                = "${var.prefix_linuxvm}-nic"
  location            = azurerm_resource_group.vm_rg_linux.location
  resource_group_name = azurerm_resource_group.vm_rg_linux.name

  ip_configuration {
    name                          = "my_nic_configuration"
    subnet_id                     = azurerm_subnet.my_terraform_subnet.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id          = azurerm_public_ip.my_terraform_public_ip.id
  }
}



# Connect the security group to the network interface
resource "azurerm_network_interface_security_group_association" "example" {
  network_interface_id      = azurerm_network_interface.my_terraform_nic.id
  network_security_group_id = azurerm_network_security_group.my_terraform_nsg.id
}

# Create storage account for boot diagnostics
resource "azurerm_storage_account" "my_storage_account" {
  name                     = "diag${random_id.random_id.hex}"
  location                 = azurerm_resource_group.vm_rg_linux.location
  resource_group_name      = azurerm_resource_group.vm_rg_linux.name
  account_tier             = "Standard"
  account_replication_type = "LRS"
}



# Create virtual machine
resource "azurerm_linux_virtual_machine" "main" {
  name                  = "${var.prefix_linuxvm}-vm"
  # admin_username        = "azureuser"
  # admin_password        = random_password.password.result
  location              = azurerm_resource_group.vm_rg_linux.location
  resource_group_name   = azurerm_resource_group.vm_rg_linux.name
  network_interface_ids = [azurerm_network_interface.my_terraform_nic.id]
  size                  = "Standard_DS1_v2"

  os_disk {
    name                 = "myOsDisk"
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }


 computer_name  = "hostname"
  admin_username = var.username

  # admin_ssh_key {
  #   username   = var.username
  #   public_key = azapi_resource_action.ssh_public_key_gen.output.publicKey
  # }




  boot_diagnostics {
    storage_account_uri = azurerm_storage_account.my_storage_account.primary_blob_endpoint
  }
}




# # Install IIS web server to the virtual machine
# resource "azurerm_virtual_machine_extension" "web_server_install" {
#   name                       = "${var.prefix_winvm}-wsi"  
#   virtual_machine_id         = azurerm_windows_virtual_machine.main.id
#   publisher                  = "Microsoft.Compute"
#   type                       = "CustomScriptExtension"
#   type_handler_version       = "1.8"
#   auto_upgrade_minor_version = true

#   settings = <<SETTINGS
#     {
#       "commandToExecute": "powershell -ExecutionPolicy Unrestricted Install-WindowsFeature -Name Web-Server -IncludeAllSubFeature -IncludeManagementTools"
#     }
#   SETTINGS
# }

# Generate random text for a unique storage account name
resource "random_id" "random_id" {
  keepers = {
    # Generate a new ID only when a new resource group is defined
    resource_group = azurerm_resource_group.vm_rg_linux.name
  }

  byte_length = 8
}

resource "random_password" "password" {
  length      = 20
  min_lower   = 1
  min_upper   = 1
  min_numeric = 1
  min_special = 1
  special     = true
}

resource "random_pet" "prefix" {
  prefix = var.prefix_winvm
  length = 1
}





output "resource_group_name" {
  value = azurerm_resource_group.vm_rg_linux.name
}

output "public_ip_address" {
  value = azurerm_linux_virtual_machine.main.public_ip_address
}

# output "admin_password" {
#   sensitive = true
#   value     = azurerm_windows_virtual_machine.main.admin_password
# }




# #ssh.tf file

# resource "random_pet" "ssh_key_name" {
#   prefix    = "ssh"
#   separator = ""
# }

# resource "azapi_resource_action" "ssh_public_key_gen" {
#   type        = "Microsoft.Compute/sshPublicKeys@2022-11-01"
#   resource_id = azapi_resource.ssh_public_key.id
#   action      = "generateKeyPair"
#   method      = "POST"

#   response_export_values = ["publicKey", "privateKey"]
# }

# resource "azapi_resource" "ssh_public_key" {
#   type      = "Microsoft.Compute/sshPublicKeys@2022-11-01"
#   name      = random_pet.ssh_key_name.id
#   location  = azurerm_resource_group.vm_rg_linux.location
#   parent_id = azurerm_resource_group.vm_rg_linux.id
# }

# output "key_data" {
#   value = azapi_resource_action.ssh_public_key_gen.output.publicKey
# }